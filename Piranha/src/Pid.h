//
// Pid.h
// Пропорционально-интегрально-дифференциальный регулятор (пока не дописано)
//

#ifndef PID_H_
#define PID_H_

	class PID_Controller
	{
	private:
		// Коэффициенты регулятора
		float Kp, Ki, Kd;
		// Текущие значения управляющих воздействий от отдельных компонент регулятора
		float proportional = 0, integral = 0, derivative = 0;

		// Целевое значение регулируемой величины
		float target;
		// Ошибка и предыдущее значение ошибки
		float error = 0, prev_error = 0;
		// Выходное воздействие
		float output;

	public:

		// Настройка коэффициентов
		// Kp: Коэффициент для пропорционального регулятора
		// Ki: Коэффициент для интегрального регулятора
		// Kd: Коэффициент для дифференциального регулятора
		void SetK(float Kp, float Ki, float Kd);

		// Расчёт воздействия
		// current: текущее значение регулируемого параметра
		//      dt: прошедшее время с предыдущего обновления
		//  return: величина воздействия
		float Regulate(float current, float dt);

		// Назначение уставки
		// value: целевое значение регулируемой величины
		void SetTarget(float value);
	};

#endif /* PID_H_ */